////////////////////////////////////////////////////////////////////////
1. 单例模式
   定义: 确保一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。
   类型: 创建类模式
         << 单例类>> Singleton
         - Singleton singleton   <------|
         + Singleton getInstance()  ----|
   包含要素:
       + 私有构造方法
       + 指向自己实例的私有静态引用
       + 以自己实例为返回值的静态的公有的方法

   单例模式根据实例化对象时机的不同分为两种: 一种是饿汉式单例，一种是懒汉式单例。饿汉式单便在单例类被加载时候，就实例化一个对象交给自己的引用; 而懒汉式在调用取得实例方法的时候才会实例化对象。  
   
   优点:
     + 在内存中只有一个对象，节省内存空间
     + 避免频繁的创建销毁对象，可以提高性能
     + 避免对共享资源的多重战胜
     + 可以全局访问

   适用场景:
     + 需要频繁实例化然后销毁的对象
     + 创建对象时耗时过多或者耗资源过多，但又经常用到的对象
     + 有状态的工具类对象
     + 频繁访问数据库或文件的对象
     + 要求只有一个对象的场景

   注意事项:
     + 只能使用单例类提供的方法得到单便对象
     + 不要做断开单例类对象与类中静态引用的危险操作
     + 多线程使用单例共享资源时，注意线程安全问题

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
